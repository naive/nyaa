#!/usr/bin/env ruby

require 'rubygems' # for ruby 1.8
require './lib/nyaa' # for testing

include Curses

@opts = Nyaa::CLI.parse(ARGV)
@nyaa = Nyaa::Search.new(@opts[:query], @opts[:category], @opts[:filter])

def batch_mode
    results = @nyaa.more.get_results
    results.each do |r|
      puts "o #{r.name}"
      puts "#{r.link}"
      puts
    end
    exit
end

def browser_mode
  begin
    nyaa = Nyaa::Browser.new(@opts, @nyaa)
  rescue Interrupt
    puts "\nInterrupt received. Exiting."
    exit
  end
end

def curses_mode
  begin
    yield
  ensure
    nocbreak
    close_screen
  end
end

# Batch mode
if @opts[:batch]
  batch_mode
end

if @opts[:curses] # use new curses interface
  nyaa = Nyaa::UI.new(@opts, @nyaa)
  cursor = 1
  curses_mode do
    loop do
      nyaa.header
      nyaa.status("*testing* cursor: #{cursor}")
      nyaa.footer
      nyaa.menu(cursor)

      case getch
      when Key::UP   then cursor = cursor == 1 ? nyaa.menusize : cursor-1
      when Key::DOWN then cursor = cursor == nyaa.menusize ? 1 : cursor+1
      when '?' then nyaa.status('help not implemented!', :failure)
      when 'g' then nyaa.get(cursor) && nyaa.status
      when 'i' then nyaa.open(cursor) && nyaa.status
      when 'n' then nyaa.status('next not implemented!', :failure)
      when 'p' then nyaa.status('prev not implemented!', :failure)
      when 'q' then break
      end
    end
  end
else # use old interface
  browser_mode
end

exit
