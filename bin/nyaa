#!/usr/bin/env ruby

# For use/testing when no gem is installed
require(File.expand_path('../../lib/nyaa', __FILE__))

SUB_COMMANDS = %w(browser script)
opts = Trollop::options do
  version "nyaa v#{Nyaa::VERSION} (c) 2012 David Palma http://github.com/mistofvongola"
  banner <<-EOM
Nyaa is an interactive text browser for NyaaTorrents. It also supports CLI mode scripting.

Usage:
    nyaa browser [options] "my search" # Interactive Browser
    nyaa script [options] "my search" # Scripting mode

    See nyaa [subcommand] -h for subcommand options and help

Categories:
  anime_all, anime_raw, anime_english, anime_nonenglish, anime_music_video
  books_all, books_raw, books_english, books_nonenglish
  audio_all, audio_lossless, audio_lossy
  pictures_all, pictures_photos, pictures_graphics,
  live_all, live_raw, live_english, live_nonenglish, live_promo
  software_all, software_apps, software_games

Filters:
  show_all, filter_remakes, trusted_only, aplus_only

Global Options:
  EOM
  opt :category, "Select a category to search in. See below for valid options.", :default => 'anime_english'
  opt :filter, "Select a filter for your search. See below for valid options.", :default => 'show_all'
  opt :outdir, "Select the download directory.", :default => File.expand_path('~')
  opt :version, "Print the version and exit."
  opt :help, "Show this information and exit."
  stop_on SUB_COMMANDS
end

cmd = ARGV.shift # get the subcommand
cmd_opts = case cmd
  when "browser" # parse browser opts
    Trollop::options do
      opt :size, "Browser mode: Show <i> results at a time. Must be between 1 and 100.", :type => :int, :default => 4
    end
  when "script" # parse script opts
    Trollop::options do
      opt :batch, "Script mode: Results to return in a single run. Must be between 1 and 100.", :type => :int, :default => 10
      opt :page, "Script mode: The NyaaTorrents result page (100 results/page).", :type => :int, :default => 1
    end
  else
    Trollop::die "unknown subcommand #{cmd.inspect}"
  end

unless Nyaa::CATS.has_key?(opts[:category])
  Trollop::die :category, "is not a valid category"
end
unless Nyaa::FILS.has_key?(opts[:filter])
  Trollop::die :filter, "is not a valid filter"
end

opts[:query] = ARGV.join(' ')

#nyaa = Nyaa::API.new(opts)
if cmd == 'browser'
  begin
    browser = Nyaa::Browser.new(opts, cmd_opts)
    browser.start
  rescue Interrupt
    puts "\nInterrupt received. Exiting."
    exit
  end
elsif cmd == 'script'
  puts "#{cmd.inspect} not implemented yet."
  exit
  begin
    n = Nyaa::CLI.new(nyaa, cmd_opts)
    n.start
  rescue Interrupt
    puts "\nInterrupt received. Exiting."
    exit
  end
else
  log("ERROR: Trollop didn't properly handly unknown subcommand")
  exit 1
end
