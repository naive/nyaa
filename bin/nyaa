#!/usr/bin/env ruby

require './lib/nyaa' # for testing
include Curses

@opts = Nyaa::CLI.parse(ARGV)
@search = Nyaa::Search.new(@opts[:query], @opts[:category], @opts[:filter])

def batch_mode
    results = @search.more.get_results
    results.each do |r|
      puts "o #{r.name}"
      puts "#{r.link}"
      puts
    end
    exit
end

def browser_mode
  begin
    nyaa = Nyaa::Browser.new(@opts, @search)
  rescue Interrupt
    puts "\nInterrupt received. Exiting."
    exit
  end
end

def curses_mode
  begin
    yield
  ensure
    nocbreak
    close_screen
  end
end

# Batch mode
if @opts[:batch]
  batch_mode
end

if @opts[:classic] # use old interface
  browser_mode
else
  nyaa = Nyaa::UI.new(@opts, @search)
  cursor = 1

  curses_mode do
    #TODO: Gracefully handle window resizing
    #Signal.trap('SIGWINCH', nyaa.status("Window size changed!", :failure))
    loop do
      nyaa.header
      nyaa.status
      nyaa.footer
      nyaa.menu(cursor)
      refresh

      case getch
      when Key::UP   then cursor = nyaa.move(cursor, -1)
      when Key::DOWN then cursor = nyaa.move(cursor, 1)
      when 'k' then cursor = nyaa.move(cursor, -1)
      when 'j' then cursor = nyaa.move(cursor, 1)
      when '?' then nyaa.status('help not implemented!', :failure)
      when 'g' then nyaa.get(cursor) && nyaa.status
      when 'i' then nyaa.open(cursor) && nyaa.status
      when 'n' then nyaa.next_page && nyaa.status
      when 'p' then nyaa.prev_page && nyaa.status
      when 'q' then @search.purge && break
      #when Key::RESIZE then nyaa.status("Window size changed!", :failure)
      end
    end
  end
end

exit
